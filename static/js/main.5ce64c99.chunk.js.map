{"version":3,"sources":["shared/components/Section/Section.module.css","shared/components/Input/Input.module.css","components/ContactList/ContactList.module.css","shared/components/Button/Button.module.css","components/FormContacts/FormContacts.module.css","services/contactsAPI.js","redux/contacts/itemsOperations.js","redux/contacts/filterAction.js","redux/contacts/contactsReduser.js","redux/store.js","shared/components/Section/Section.jsx","redux/contacts/contactsSelectors.js","shared/components/Input/Input.jsx","shared/components/Button/Button.jsx","components/FormContacts/FormContacts.jsx","components/FilterInput/FilterInput.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","path","getContactsAPI","a","get","data","addContactAPI","contact","post","responsedContact","id","deleteContactAPI","console","log","delete","getContacts","createAsyncThunk","_","rejectWithValue","contacts","message","addContact","deleteContact","filterContacts","createAction","items","createReducer","fulfilled","payload","state","filter","item","status","pending","rejected","error","action","type","combineReducers","store","configureStore","reducer","contactsReduser","middleware","getDefaultMiddleware","concat","logger","devTools","process","Section","title","children","classEl","className","styles","container","forChildrens","getFilter","getItems","nanoid","Input","props","labelName","value","onChange","name","pattern","placeholderValue","filterComponent","formComponent","htmlFor","formLabel","formInput","placeholder","defaultProps","undefined","Button","text","onClick","submitBtn","btn","FormContacts","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","formElements","FormData","currentTarget","forEach","number","alert","lowerCaseName","toLowerCase","findInArray","find","checkContact","nameInput","document","querySelector","numberInput","resetForm","s","form","FilterInput","target","ContactList","contactList","lowerCaseFilter","includes","filterContactsHandler","map","contactItem","src","toonavatar","generate_avatar","alt","width","contactImg","memo","App","useEffect","ReactDOM","render","StrictMode","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,SAAW,0BAA0B,UAAY,2BAA2B,UAAY,2BAA2B,MAAQ,uBAAuB,aAAe,gC,mBCAnLD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,gBAAkB,+BAA+B,UAAY,yBAAyB,UAAY,2B,mBCAjKD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,WAAa,kC,mBCA7HD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,IAAM,sB,mBCA9DD,EAAOC,QAAU,CAAC,KAAO,6B,mOCCzBC,IAAMC,SAASC,QAAU,8CAEzB,I,MAAMC,EAAO,YAEAC,EAAc,uCAAG,8BAAAC,EAAA,sEACLL,IAAMM,IAAIH,GADL,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAa,uCAAG,WAAMC,GAAN,mBAAAJ,EAAA,sEACJL,IAAMU,KAAKP,EAAMM,GADb,uBACnBF,EADmB,EACnBA,KACFI,EAFqB,2BAGtBF,GAHsB,IAIzBG,GAAIL,EAAKK,KAJgB,kBAMpBD,GANoB,2CAAH,sDASbE,EAAgB,uCAAG,WAAMD,GAAN,SAAAP,EAAA,6DAC9BS,QAAQC,IAAI,QADkB,SAExBf,IAAMgB,OAAOb,EAAO,IAAMS,GAFF,gCAGvBA,GAHuB,2CAAH,sDChBhBK,EAAcC,YACzB,uBADyC,uCAEzC,WAAOC,EAAP,oBAAAd,EAAA,6DAAYe,EAAZ,EAAYA,gBAAZ,kBAE2BhB,IAF3B,cAEUiB,EAFV,yBAGWA,GAHX,yDAKWD,EAAgB,KAAME,UALjC,yDAFyC,yDAY9BC,EAAaL,YACxB,sBADwC,uCAExC,WAAOT,EAAP,oBAAAJ,EAAA,6DAAkBe,EAAlB,EAAkBA,gBAAlB,kBAEmCZ,EAAcC,GAFjD,cAEUE,EAFV,yBAGWA,GAHX,yDAKWS,EAAgB,KAAME,UALjC,yDAFwC,yDAY7BE,EAAgBN,YAC3B,yBAD2C,uCAE3C,WAAON,EAAP,kBAAAP,EAAA,6DAAae,EAAb,EAAaA,gBAAb,kBAEUP,EAAiBD,GAF3B,gCAGWA,GAHX,yDAKWQ,EAAgB,KAAME,UALjC,yDAF2C,yDC1BhCG,EAAiBC,YAAa,kBCIrCC,EAAQC,YAAc,IAAD,mBACxBX,EAAYY,WAAY,SAACV,EAAD,YAAMW,WADN,cAExBP,EAAWM,WAAY,SAACE,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAFlC,cAGxBN,EAAcK,WAAY,SAACE,EAAD,OAAUD,EAAV,EAAUA,QAAV,OAAwBC,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKrB,KAAOkB,QAH3D,IAMrBI,EAASN,YAAc,QAAD,mBACzBX,EAAYkB,SAAU,iBAAM,aADH,cAEzBlB,EAAYY,WAAY,iBAAM,cAFL,cAGzBZ,EAAYmB,UAAW,iBAAM,cAHJ,cAIzBb,EAAWY,SAAU,iBAAM,aAJF,cAKzBZ,EAAWM,WAAY,iBAAM,cALJ,cAMzBN,EAAWa,UAAW,iBAAM,cANH,cAOzBZ,EAAcW,SAAU,iBAAM,aAPL,cAQzBX,EAAcK,WAAY,iBAAM,cARP,cASzBL,EAAcY,UAAW,iBAAM,cATN,IAYtBC,EAAQT,YAAc,MAAD,mBACxBX,EAAYmB,UAAW,SAACjB,EAAGmB,GAAJ,OAAeA,EAAOR,WADrB,cAExBb,EAAYkB,SAAU,kBAAM,QAFJ,cAGxBZ,EAAWa,UAAW,SAACjB,EAAGmB,GAAJ,OAAeA,EAAOR,WAHpB,cAIxBP,EAAWY,SAAU,kBAAM,QAJH,cAKxBX,EAAcY,UAAW,SAACjB,EAAGmB,GAAJ,OAAeA,EAAOR,WALvB,cAMxBN,EAAcW,SAAU,kBAAM,QANN,IASrBH,EAASJ,YAAc,GAAD,eACzBH,EAAec,MAAO,SAACpB,EAAD,YAAMW,YAGhBU,cAAgB,CAAEb,QAAOK,SAAQE,SAAQG,UCrBzCI,EARDC,YAAe,CAC3BC,QAAS,CACPtB,SAAUuB,GAEZC,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,OAAOC,MAClEC,UAAUC,I,wBCCGC,EAXC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAClC,OACE,yBAASC,UAAWC,IAAOF,GAA3B,SACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,oBAAIF,UAAWC,IAAOJ,MAAtB,SAA8BA,IAC9B,qBAAKG,UAAWC,IAAOE,aAAvB,SAAsCL,UCRjCM,EAAY,SAAA5B,GAAK,OAAIA,EAAMV,SAASW,QAEpC4B,EAAW,SAAA7B,GAAK,OAAIA,EAAMV,SAASM,O,yBCE1Cf,EAAKiD,cAELC,EAAQ,SAAAC,GACZ,IAAQC,EAA6ED,EAA7EC,UAAWC,EAAkEF,EAAlEE,MAAOC,EAA2DH,EAA3DG,SAAU3B,EAAiDwB,EAAjDxB,KAAM4B,EAA2CJ,EAA3CI,KAAMC,EAAqCL,EAArCK,QAAShB,EAA4BW,EAA5BX,MAAOiB,EAAqBN,EAArBM,iBAEhE,OACE,sBAAKd,UAAoB,WAATY,EAAoBX,IAAOc,gBAAkBd,IAAOe,cAApE,UACE,wBAAOC,QAAS5D,EAAI2C,UAAWC,IAAOiB,UAAtC,UACGT,EADH,OAGA,uBACET,UAAWC,IAAOkB,UAClB9D,GAAIA,EACJqD,MAAOA,EACPC,SAAUA,EACV3B,KAAMA,EACN4B,KAAMA,EACNC,QAASA,EACThB,MAAOA,EACPuB,YAAaN,QAMNP,IAEfA,EAAMc,aAAe,CACnBrC,KAAM,OACNoC,iBAAaE,G,qBC9BTC,EAAS,SAAC,GAA6B,IAA3BvC,EAA0B,EAA1BA,KAAMwC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5B,OACE,wBACEA,QAASA,QAAoBH,EAC7BtC,KAAMA,EACNgB,UAAoB,WAAThB,EAAoBiB,IAAOyB,UAAYzB,IAAO0B,IAH3D,SAKGH,KAIQD,IAEfA,EAAOF,aAAe,CACpBrC,KAAM,SACNyC,aAASH,G,wBCgEIM,GAzEM,WACnB,IAAMC,EAAWC,cACX1D,EAAQ2D,YAAY1B,GA4C1B,OACE,mCACE,uBAAM2B,SA5CV,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAe,IAAIC,SAASH,EAAEI,eAC9BnF,EAAU,GAEhBiF,EAAaG,SAAQ,SAAC5B,EAAOE,GAAR,OAAkB1D,EAAQ0D,GAAQF,KAEvD,IAAQE,EAAiB1D,EAAjB0D,KAAM2B,EAAWrF,EAAXqF,OAEd,IAAK3B,IAAS2B,EACZ,OAAOC,MAAM,yBAOjB,SAAsBtF,GACpB,IAAQ0D,EAAS1D,EAAT0D,KACF6B,EAAgB7B,EAAK8B,cAErBC,EAAcvE,EAAMwE,MAAK,YAE7B,OAF2C,EAAXhC,KACA8B,gBACFD,KAGhC,GAAIE,EACF,OAAOH,MAAM,GAAD,OAAI5B,EAAJ,kCAGdiB,EAAS7D,EAAWd,IAlBpB2F,CAAa3F,GAqBf,WACE,IAAM4F,EAAYC,SAASC,cAAc,sBACnCC,EAAcF,SAASC,cAAc,wBAE3CF,EAAUpC,MAAQ,GAClBuC,EAAYvC,MAAQ,GAxBpBwC,IA6BgClD,UAAWmD,KAAEC,KAA3C,UACE,cAAC,EAAD,CACE3C,UAAU,OACVzB,KAAK,OACL4B,KAAK,OACLC,QAAQ,yHACRhB,MAAM,yIACNiB,iBAAiB,aAGnB,cAAC,EAAD,CACEL,UAAU,SACVzB,KAAK,MACL4B,KAAK,SACLC,QAAQ,yFACRhB,MAAM,+FACNiB,iBAAiB,sBAGnB,cAAC,EAAD,CAAQ9B,KAAK,SAASwC,KAAK,sBC/CpB6B,GAvBK,WAClB,IAAM5E,EAASsD,YAAY3B,GACrByB,EAAWC,cAMjB,OACE,mCACE,cAAC,EAAD,CACErB,UAAU,uBACVC,MAAOjC,EACPkC,SATN,SAA6BsB,GAC3B,IAAQvB,EAAUuB,EAAEqB,OAAZ5C,MACRmB,EAAS3D,EAAewC,KAQpB1B,KAAK,OACL4B,KAAK,SACLC,QAAQ,yHACRhB,MAAM,yIACNiB,iBAAiB,c,wCCdnByC,GAAc,WAClB,IAAM9E,EAASsD,YAAY3B,GACrBhC,EAAQ2D,YAAY1B,GACpBwB,EAAWC,cAajB,OACE,oBAAI9B,UAAWmD,KAAEK,YAAjB,SAZF,WACE,IAAMC,EAAkBhF,EAAOiE,cAO/B,OALyBtE,EAAMK,QAAO,YAEpC,OAFkD,EAAXmC,KACZ8B,cACNgB,SAASD,MAQ7BE,GAAwBC,KAAI,gBAAGvG,EAAH,EAAGA,GAAIuD,EAAP,EAAOA,KAAM2B,EAAb,EAAaA,OAAb,OAC3B,qBAAavC,UAAWmD,KAAEU,YAA1B,UACE,qBAAKC,IAAKC,KAAWC,kBAAmBC,IAAI,MAAMC,MAAM,KAAKlE,UAAWmD,KAAEgB,aAC1E,gCACE,8BAAIvD,EAAJ,OACA,4BAAI2B,OAGN,cAAC,EAAD,CAAQvD,KAAK,SAASwC,KAAK,eAAYC,QAAS,kBAAMI,EAAS5D,EAAcZ,SAPtEA,SAcF+G,kBAAKb,ICVLc,I,MArBH,WACV,IAAMxC,EAAWC,cAMjB,OAJAwC,qBAAU,WACRzC,EAASnE,OACR,CAACmE,IAGF,qCACE,eAAC,EAAD,CAAShC,MAAO,YAAaE,QAAS,YAAtC,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,cAAC,EAAD,CAASF,MAAO,WAAYE,QAAS,WAArC,SACE,cAAC,GAAD,W,MCjBRwE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvF,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAIN6D,SAAS2B,eAAe,W","file":"static/js/main.5ce64c99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Section_contacts__21cnA\",\"phonebook\":\"Section_phonebook__WZa7H\",\"container\":\"Section_container__3RGrk\",\"title\":\"Section_title__1muVk\",\"forChildrens\":\"Section_forChildrens__r0PtF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Input_formComponent__2Rd3f\",\"filterComponent\":\"Input_filterComponent__2T4Wn\",\"formLabel\":\"Input_formLabel__2cj0B\",\"formInput\":\"Input_formInput__3rKpd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2QWrC\",\"contactItem\":\"ContactList_contactItem__CkfAB\",\"contactImg\":\"ContactList_contactImg__2hyQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"Button_submitBtn__SEzpX\",\"btn\":\"Button_btn__1g5MC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__2_G9q\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61debee6fb8dae0017c2e232.mockapi.io';\r\n\r\nconst path = '/contacts';\r\n\r\nexport const getContactsAPI = async () => {\r\n  const { data } = await axios.get(path);\r\n  return data;\r\n};\r\n\r\nexport const addContactAPI = async contact => {\r\n  const { data } = await axios.post(path, contact);\r\n  const responsedContact = {\r\n    ...contact,\r\n    id: data.id,\r\n  };\r\n  return responsedContact;\r\n};\r\n\r\nexport const deleteContactAPI = async id => {\r\n  console.log('test');\r\n  await axios.delete(path + '/' + id);\r\n  return id;\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport { getContactsAPI, addContactAPI, deleteContactAPI } from '../../services/contactsAPI';\r\n\r\nexport const getContacts = createAsyncThunk(\r\n  'contacts/getContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await getContactsAPI();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const responsedContact = await addContactAPI(contact);\r\n      return responsedContact;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await deleteContactAPI(id);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContacts = createAction('filterContacts');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport { getContacts, addContact, deleteContact } from './itemsOperations';\r\n\r\nimport { filterContacts } from './filterAction';\r\n\r\nconst items = createReducer([], {\r\n  [getContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) => state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst status = createReducer('idle', {\r\n  [getContacts.pending]: () => 'pending',\r\n  [getContacts.fulfilled]: () => 'resolved',\r\n  [getContacts.rejected]: () => 'rejected',\r\n  [addContact.pending]: () => 'pending',\r\n  [addContact.fulfilled]: () => 'resolved',\r\n  [addContact.rejected]: () => 'rejected',\r\n  [deleteContact.pending]: () => 'pending',\r\n  [deleteContact.fulfilled]: () => 'resolved',\r\n  [deleteContact.rejected]: () => 'rejected',\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [getContacts.rejected]: (_, action) => action.payload,\r\n  [getContacts.pending]: () => null,\r\n  [addContact.rejected]: (_, action) => action.payload,\r\n  [addContact.pending]: () => null,\r\n  [deleteContact.rejected]: (_, action) => action.payload,\r\n  [deleteContact.pending]: () => null,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts.type]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, status, error });\r\n","// process - глобальная переменная в Node.js\r\n// process.env.NODE_ENV - какая стадия проекта (девелопмент, продакшн...)\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport contactsReduser from './contacts/contactsReduser';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReduser,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children, classEl }) => {\r\n  return (\r\n    <section className={styles[classEl]}>\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>{title}</h2>\r\n        <div className={styles.forChildrens}>{children}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","export const getFilter = state => state.contacts.filter;\r\n\r\nexport const getItems = state => state.contacts.items;\r\n","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport styles from './Input.module.css';\r\n\r\nconst id = nanoid();\r\n\r\nconst Input = props => {\r\n  const { labelName, value, onChange, type, name, pattern, title, placeholderValue } = props;\r\n\r\n  return (\r\n    <div className={name === 'filter' ? styles.filterComponent : styles.formComponent}>\r\n      <label htmlFor={id} className={styles.formLabel}>\r\n        {labelName}:\r\n      </label>\r\n      <input\r\n        className={styles.formInput}\r\n        id={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        type={type}\r\n        name={name}\r\n        pattern={pattern}\r\n        title={title}\r\n        placeholder={placeholderValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: undefined,\r\n};\r\n\r\nInput.propTypes = {\r\n  labelName: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ type, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick ? onClick : undefined}\r\n      type={type}\r\n      className={type === 'submit' ? styles.submitBtn : styles.btn}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  onClick: undefined,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getItems } from '../../redux/contacts/contactsSelectors';\r\nimport { addContact } from '../../redux/contacts/itemsOperations';\r\nimport Input from '../../shared/components/Input';\r\nimport Button from '../../shared/components/Button';\r\n\r\nimport s from './FormContacts.module.css';\r\n\r\nconst FormContacts = () => {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(getItems);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const formElements = new FormData(e.currentTarget);\r\n    const contact = {};\r\n\r\n    formElements.forEach((value, name) => (contact[name] = value));\r\n\r\n    const { name, number } = contact;\r\n\r\n    if (!name || !number) {\r\n      return alert('Please fill the form');\r\n    }\r\n    checkContact(contact);\r\n\r\n    resetForm();\r\n  }\r\n\r\n  function checkContact(contact) {\r\n    const { name } = contact;\r\n    const lowerCaseName = name.toLowerCase();\r\n\r\n    const findInArray = items.find(({ name }) => {\r\n      const lowerCaseStateName = name.toLowerCase();\r\n      return lowerCaseStateName === lowerCaseName;\r\n    });\r\n\r\n    if (findInArray) {\r\n      return alert(`${name} is already in your contacts!`);\r\n    }\r\n\r\n    dispatch(addContact(contact));\r\n  }\r\n\r\n  function resetForm() {\r\n    const nameInput = document.querySelector('input[name=\"name\"]');\r\n    const numberInput = document.querySelector('input[name=\"number\"]');\r\n\r\n    nameInput.value = '';\r\n    numberInput.value = '';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <Input\r\n          labelName=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholderValue=\"Jane Doe\"\r\n        />\r\n\r\n        <Input\r\n          labelName=\"Number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          placeholderValue=\"+38-099-123-45-67\"\r\n        />\r\n\r\n        <Button type=\"submit\" text=\"Add contact\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormContacts;\r\n","import Input from '../../shared/components/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\r\nimport { filterContacts } from '../../redux/contacts/filterAction';\r\n\r\nconst FilterInput = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  function filterChangeHandler(e) {\r\n    const { value } = e.target;\r\n    dispatch(filterContacts(value));\r\n  }\r\n  return (\r\n    <>\r\n      <Input\r\n        labelName=\"Find contact by name\"\r\n        value={filter}\r\n        onChange={filterChangeHandler}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        placeholderValue=\"Search\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default FilterInput;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { memo } from 'react';\r\nimport toonavatar from 'cartoon-avatar';\r\n\r\nimport { deleteContact } from '../../redux/contacts/itemsOperations';\r\nimport { getFilter, getItems } from '../../redux/contacts/contactsSelectors';\r\nimport Button from '../../shared/components/Button';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const filter = useSelector(getFilter);\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  function filterContactsHandler() {\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n\r\n    const filteredContacts = items.filter(({ name }) => {\r\n      const lowerCaseName = name.toLowerCase();\r\n      return lowerCaseName.includes(lowerCaseFilter);\r\n    });\r\n\r\n    return filteredContacts;\r\n  }\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filterContactsHandler().map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactItem}>\r\n          <img src={toonavatar.generate_avatar()} alt=\"img\" width=\"60\" className={s.contactImg} />\r\n          <div>\r\n            <p>{name}:</p>\r\n            <p>{number}</p>\r\n          </div>\r\n\r\n          <Button type=\"button\" text=\"&#128473;\" onClick={() => dispatch(deleteContact(id))} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default memo(ContactList);\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContacts } from './redux/contacts/itemsOperations';\n\nimport Section from './shared/components/Section';\nimport FormContacts from './components/FormContacts';\nimport FilterInput from './components/FilterInput';\nimport ContactList from './components/ContactList';\n\nimport './styles/App.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title={'Phonebook'} classEl={'phonebook'}>\n        <FormContacts />\n        <FilterInput />\n      </Section>\n\n      <Section title={'Contacts'} classEl={'contacts'}>\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './redux/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}