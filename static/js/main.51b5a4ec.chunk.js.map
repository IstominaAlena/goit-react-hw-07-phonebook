{"version":3,"sources":["shared/components/Section/Section.module.css","shared/components/Input/Input.module.css","components/ContactList/ContactList.module.css","shared/components/Button/Button.module.css","components/FormContacts/FormContacts.module.css","services/contactsAPI.js","redux/contacts/itemsOperations.js","redux/contacts/filterAction.js","redux/contacts/contactsReduser.js","redux/store.js","shared/components/Section/Section.jsx","shared/components/Input/Input.jsx","shared/components/Button/Button.jsx","components/FormContacts/FormContacts.jsx","redux/contacts/contactsSelectors.js","components/FilterInput/FilterInput.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","path","getContactsAPI","a","get","data","addContactAPI","contact","post","responsedContact","id","deleteContactAPI","console","log","delete","getContacts","createAsyncThunk","contacts","addContact","deleteContact","filterContacts","createAction","items","createReducer","fulfilled","_","payload","state","lowerCaseName","name","toLowerCase","find","alert","filter","item","status","pending","rejected","error","action","type","combineReducers","store","configureStore","reducer","contactsReduser","middleware","getDefaultMiddleware","concat","logger","devTools","process","Section","title","children","classEl","className","styles","container","forChildrens","nanoid","Input","props","labelName","value","onChange","pattern","placeholderValue","filterComponent","formComponent","htmlFor","formLabel","formInput","placeholder","defaultProps","undefined","Button","text","onClick","submitBtn","btn","FormContacts","dispatch","useDispatch","onSubmit","e","preventDefault","formElements","FormData","currentTarget","forEach","number","nameInput","document","querySelector","numberInput","resetForm","s","form","getFilter","getItems","FilterInput","useSelector","target","ContactList","contactList","lowerCaseFilter","includes","filterContactsHandler","map","contactItem","src","toonavatar","generate_avatar","alt","width","contactImg","memo","App","useEffect","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51b5a4ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Section_contacts__21cnA\",\"phonebook\":\"Section_phonebook__WZa7H\",\"container\":\"Section_container__3RGrk\",\"title\":\"Section_title__1muVk\",\"forChildrens\":\"Section_forChildrens__r0PtF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Input_formComponent__2Rd3f\",\"filterComponent\":\"Input_filterComponent__2T4Wn\",\"formLabel\":\"Input_formLabel__2cj0B\",\"formInput\":\"Input_formInput__3rKpd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2QWrC\",\"contactItem\":\"ContactList_contactItem__CkfAB\",\"contactImg\":\"ContactList_contactImg__2hyQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"Button_submitBtn__SEzpX\",\"btn\":\"Button_btn__1g5MC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__2_G9q\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61debee6fb8dae0017c2e232.mockapi.io';\r\n\r\nconst path = '/contacts';\r\n\r\nexport const getContactsAPI = async () => {\r\n  const { data } = await axios.get(path);\r\n  return data;\r\n};\r\n\r\nexport const addContactAPI = async contact => {\r\n  const { data } = await axios.post(path, contact);\r\n  const responsedContact = {\r\n    ...contact,\r\n    id: data.id,\r\n  };\r\n  return responsedContact;\r\n};\r\n\r\nexport const deleteContactAPI = async id => {\r\n  console.log('test');\r\n  await axios.delete(path + '/' + id);\r\n  return id;\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport { getContactsAPI, addContactAPI, deleteContactAPI } from '../../services/contactsAPI';\r\n\r\nexport const getContacts = createAsyncThunk('contacts/getContacts', async () => {\r\n  const contacts = await getContactsAPI();\r\n  return contacts;\r\n});\r\n\r\nexport const addContact = createAsyncThunk('contacts/addContact', async contact => {\r\n  const responsedContact = await addContactAPI(contact);\r\n  return responsedContact;\r\n});\r\n\r\nexport const deleteContact = createAsyncThunk('contacts/deleteContact', async id => {\r\n  await deleteContactAPI(id);\r\n  return id;\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContacts = createAction('filterContacts');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport { getContacts, addContact, deleteContact } from './itemsOperations';\r\n\r\nimport { filterContacts } from './filterAction';\r\n\r\nconst items = createReducer([], {\r\n  [getContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => {\r\n    const lowerCaseName = payload.name.toLowerCase();\r\n\r\n    const findInArray = state.find(({ name }) => {\r\n      const lowerCaseStateName = name.toLowerCase();\r\n      return lowerCaseStateName === lowerCaseName;\r\n    });\r\n\r\n    if (findInArray) {\r\n      return alert(`${payload.name} is already in your contacts!`);\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContact.fulfilled]: (state, { payload }) => state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst status = createReducer('idle', {\r\n  [getContacts.pending]: () => 'pending',\r\n  [getContacts.fulfilled]: () => 'resolved',\r\n  [getContacts.rejected]: () => 'rejected',\r\n  [addContact.pending]: () => 'pending',\r\n  [addContact.fulfilled]: () => 'resolved',\r\n  [addContact.rejected]: () => 'rejected',\r\n  [deleteContact.pending]: () => 'pending',\r\n  [deleteContact.fulfilled]: () => 'resolved',\r\n  [deleteContact.rejected]: () => 'rejected',\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [getContacts.rejected]: (_, action) => action.payload,\r\n  [getContacts.pending]: () => null,\r\n  [addContact.rejected]: (_, action) => action.payload,\r\n  [addContact.pending]: () => null,\r\n  [deleteContact.rejected]: (_, action) => action.payload,\r\n  [deleteContact.pending]: () => null,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts.type]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, status, error });\r\n","// process - глобальная переменная в Node.js\r\n// process.env.NODE_ENV - какая стадия проекта (девелопмент, продакшн...)\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport contactsReduser from './contacts/contactsReduser';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReduser,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children, classEl }) => {\r\n  return (\r\n    <section className={styles[classEl]}>\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>{title}</h2>\r\n        <div className={styles.forChildrens}>{children}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport styles from './Input.module.css';\r\n\r\nconst id = nanoid();\r\n\r\nconst Input = props => {\r\n  const { labelName, value, onChange, type, name, pattern, title, placeholderValue } = props;\r\n\r\n  return (\r\n    <div className={name === 'filter' ? styles.filterComponent : styles.formComponent}>\r\n      <label htmlFor={id} className={styles.formLabel}>\r\n        {labelName}:\r\n      </label>\r\n      <input\r\n        className={styles.formInput}\r\n        id={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        type={type}\r\n        name={name}\r\n        pattern={pattern}\r\n        title={title}\r\n        placeholder={placeholderValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: undefined,\r\n};\r\n\r\nInput.propTypes = {\r\n  labelName: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ type, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick ? onClick : undefined}\r\n      type={type}\r\n      className={type === 'submit' ? styles.submitBtn : styles.btn}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  onClick: undefined,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport { addContact } from '../../redux/contacts/itemsOperations';\r\nimport Input from '../../shared/components/Input';\r\nimport Button from '../../shared/components/Button';\r\n\r\nimport s from './FormContacts.module.css';\r\n\r\nconst FormContacts = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const formElements = new FormData(e.currentTarget);\r\n    const contact = {};\r\n\r\n    formElements.forEach((value, name) => (contact[name] = value));\r\n    const { name, number } = contact;\r\n\r\n    if (!name || !number) {\r\n      return alert('Please fill the form');\r\n    }\r\n\r\n    dispatch(addContact(contact));\r\n    resetForm();\r\n  }\r\n\r\n  function resetForm() {\r\n    const nameInput = document.querySelector('input[name=\"name\"]');\r\n    const numberInput = document.querySelector('input[name=\"number\"]');\r\n\r\n    nameInput.value = '';\r\n    numberInput.value = '';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <Input\r\n          labelName=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholderValue=\"Jane Doe\"\r\n        />\r\n\r\n        <Input\r\n          labelName=\"Number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          placeholderValue=\"+38-099-123-45-67\"\r\n        />\r\n\r\n        <Button type=\"submit\" text=\"Add contact\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormContacts;\r\n","export const getFilter = state => state.contacts.filter;\r\n\r\nexport const getItems = state => state.contacts.items;\r\n","import Input from '../../shared/components/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\r\nimport { filterContacts } from '../../redux/contacts/filterAction';\r\n\r\nconst FilterInput = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  function filterChangeHandler(e) {\r\n    const { value } = e.target;\r\n    dispatch(filterContacts(value));\r\n  }\r\n  return (\r\n    <>\r\n      <Input\r\n        labelName=\"Find contact by name\"\r\n        value={filter}\r\n        onChange={filterChangeHandler}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        placeholderValue=\"Search\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default FilterInput;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { memo } from 'react';\r\nimport toonavatar from 'cartoon-avatar';\r\n\r\nimport { deleteContact } from '../../redux/contacts/itemsOperations';\r\nimport { getFilter, getItems } from '../../redux/contacts/contactsSelectors';\r\nimport Button from '../../shared/components/Button';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const filter = useSelector(getFilter);\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  function filterContactsHandler() {\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n\r\n    const filteredContacts = items.filter(({ name }) => {\r\n      const lowerCaseName = name.toLowerCase();\r\n      return lowerCaseName.includes(lowerCaseFilter);\r\n    });\r\n\r\n    return filteredContacts;\r\n  }\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filterContactsHandler().map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactItem}>\r\n          <img src={toonavatar.generate_avatar()} alt=\"img\" width=\"60\" className={s.contactImg} />\r\n          <div>\r\n            <p>{name}:</p>\r\n            <p>{number}</p>\r\n          </div>\r\n\r\n          <Button type=\"button\" text=\"&#128473;\" onClick={() => dispatch(deleteContact(id))} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default memo(ContactList);\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContacts } from './redux/contacts/itemsOperations';\n\nimport Section from './shared/components/Section';\nimport FormContacts from './components/FormContacts';\nimport FilterInput from './components/FilterInput';\nimport ContactList from './components/ContactList';\n\nimport './styles/App.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title={'Phonebook'} classEl={'phonebook'}>\n        <FormContacts />\n        <FilterInput />\n      </Section>\n\n      <Section title={'Contacts'} classEl={'contacts'}>\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './redux/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}